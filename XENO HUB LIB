local XenoHub = {
    Tabs = {},
    CurrentTab = nil,
    Elements = {},
    Dragging = false,
    DragStartPos = {x = 0, y = 0},
    ImageDragging = false,
    ImageDragStartPos = {x = 0, y = 0}
}

-- Main Window
local XenoWindow = Instance.new("ScreenGui")
XenoWindow.Name = "XenoHubUI"
XenoWindow.ResetOnSpawn = false

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 350, 0, 450)
MainFrame.Position = UDim2.new(0.5, -175, 0.5, -225)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.Parent = XenoWindow

-- Header
local Header = Instance.new("Frame")
Header.Name = "Header"
Header.Size = UDim2.new(1, 0, 0, 40)
Header.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Header.BorderSizePixel = 0
Header.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Text = "XENO HUB GROW A GARDEN"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 14
Title.Font = Enum.Font.GothamBold
Title.BackgroundTransparency = 1
Title.Size = UDim2.new(0.7, 0, 0.5, 0)
Title.Position = UDim2.new(0.05, 0, 0.25, 0)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Header

local SubTitle = Instance.new("TextLabel")
SubTitle.Name = "SubTitle"
SubTitle.Text = "by : xeno999"
SubTitle.TextColor3 = Color3.fromRGB(150, 150, 150)
SubTitle.TextSize = 10
SubTitle.Font = Enum.Font.Gotham
SubTitle.BackgroundTransparency = 1
SubTitle.Size = UDim2.new(0.7, 0, 0.3, 0)
SubTitle.Position = UDim2.new(0.05, 0, 0.6, 0)
SubTitle.TextXAlignment = Enum.TextXAlignment.Left
SubTitle.Visible = false
SubTitle.Parent = Header

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 14
CloseButton.Font = Enum.Font.GothamBold
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Position = UDim2.new(1, -30, 0.5, -12.5)
CloseButton.Parent = Header

local ImageBox = Instance.new("ImageLabel")
ImageBox.Name = "ImageBox"
ImageBox.Size = UDim2.new(0, 30, 0, 30)
ImageBox.Position = UDim2.new(1, -70, 0.5, -15)
ImageBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ImageBox.BorderSizePixel = 0
ImageBox.Image = ""
ImageBox.Parent = Header

-- Tab Container
local TabContainer = Instance.new("Frame")
TabContainer.Name = "TabContainer"
TabContainer.Size = UDim2.new(0.25, 0, 1, -40)
TabContainer.Position = UDim2.new(0, 0, 0, 40)
TabContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
TabContainer.BorderSizePixel = 0
TabContainer.Parent = MainFrame

local TabListLayout = Instance.new("UIListLayout")
TabListLayout.Name = "TabListLayout"
TabListLayout.Padding = UDim.new(0, 5)
TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabListLayout.Parent = TabContainer

local TabScrollingFrame = Instance.new("ScrollingFrame")
TabScrollingFrame.Name = "TabScrollingFrame"
TabScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
TabScrollingFrame.Position = UDim2.new(0, 0, 0, 0)
TabScrollingFrame.BackgroundTransparency = 1
TabScrollingFrame.ScrollBarThickness = 5
TabScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
TabScrollingFrame.Parent = TabContainer

-- Content Container
local ContentContainer = Instance.new("Frame")
ContentContainer.Name = "ContentContainer"
ContentContainer.Size = UDim2.new(0.75, 0, 1, -40)
ContentContainer.Position = UDim2.new(0.25, 0, 0, 40)
ContentContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ContentContainer.BorderSizePixel = 0
ContentContainer.Parent = MainFrame

local ContentScrollingFrame = Instance.new("ScrollingFrame")
ContentScrollingFrame.Name = "ContentScrollingFrame"
ContentScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
ContentScrollingFrame.Position = UDim2.new(0, 0, 0, 0)
ContentScrollingFrame.BackgroundTransparency = 1
ContentScrollingFrame.ScrollBarThickness = 5
ContentScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ContentScrollingFrame.Parent = ContentContainer

local ContentListLayout = Instance.new("UIListLayout")
ContentListLayout.Name = "ContentListLayout"
ContentListLayout.Padding = UDim.new(0, 10)
ContentListLayout.SortOrder = Enum.SortOrder.LayoutOrder
ContentListLayout.Parent = ContentScrollingFrame

-- Make draggable
local function MakeDraggable(frame, dragToggle)
    local dragInput, dragStart, startPos
    
    frame.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            dragToggle = true
            dragStart = input.Position
            startPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)
    
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragToggle then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

MakeDraggable(MainFrame, XenoHub.Dragging)
MakeDraggable(ImageBox, XenoHub.ImageDragging)

-- Close button functionality
CloseButton.MouseButton1Click:Connect(function()
    XenoWindow:Destroy()
end)

-- Image box functionality
ImageBox.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        XenoHub.ImageDragging = true
        XenoHub.ImageDragStartPos = {x = input.Position.X, y = input.Position.Y}
    end
end)

ImageBox.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        XenoHub.ImageDragging = false
    end
end)

-- Tab functions
function XenoHub:AddTab(tabName)
    local newTab = {}
    newTab.Name = tabName
    newTab.Elements = {}
    
    -- Tab button
    local TabButton = Instance.new("TextButton")
    TabButton.Name = tabName .. "Tab"
    TabButton.Text = tabName
    TabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
    TabButton.TextSize = 12
    TabButton.Font = Enum.Font.Gotham
    TabButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TabButton.Size = UDim2.new(1, -10, 0, 30)
    TabButton.Position = UDim2.new(0, 5, 0, 0)
    TabButton.BorderSizePixel = 0
    TabButton.Parent = TabScrollingFrame
    
    -- Tab highlight
    local TabHighlight = Instance.new("Frame")
    TabHighlight.Name = "Highlight"
    TabHighlight.Size = UDim2.new(0, 3, 0.8, 0)
    TabHighlight.Position = UDim2.new(0, 0, 0.1, 0)
    TabHighlight.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
    TabHighlight.BorderSizePixel = 0
    TabHighlight.Visible = false
    TabHighlight.Parent = TabButton
    
    -- Tab selection
    TabButton.MouseButton1Click:Connect(function()
        self:SelectTab(tabName)
    end)
    
    -- Add to tabs
    self.Tabs[tabName] = newTab
    
    -- Select if first tab
    if not self.CurrentTab then
        self:SelectTab(tabName)
    end
    
    return newTab
end

function XenoHub:SelectTab(tabName)
    if self.CurrentTab then
        -- Hide previous tab content
        for _, element in pairs(self.CurrentTab.Elements) do
            if element.Instance then
                element.Instance.Visible = false
            end
        end
        
        -- Remove highlight from previous tab
        local prevTabButton = TabScrollingFrame:FindFirstChild(self.CurrentTab.Name .. "Tab")
        if prevTabButton then
            prevTabButton.Highlight.Visible = false
        end
    end
    
    -- Set new current tab
    self.CurrentTab = self.Tabs[tabName]
    
    -- Show new tab content
    for _, element in pairs(self.CurrentTab.Elements) do
        if element.Instance then
            element.Instance.Visible = true
        end
    end
    
    -- Add highlight to new tab
    local newTabButton = TabScrollingFrame:FindFirstChild(tabName .. "Tab")
    if newTabButton then
        newTabButton.Highlight.Visible = true
        
        -- Animation
        local highlight = newTabButton.Highlight
        highlight.Size = UDim2.new(0, 0, 0.8, 0)
        highlight.Visible = true
        
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        game:GetService("TweenService"):Create(highlight, tweenInfo, {Size = UDim2.new(0, 3, 0.8, 0)}):Play()
    end
end

-- UI Element functions
function XenoHub:AddButton(tabName, settings)
    local tab = self.Tabs[tabName]
    if not tab then return end
    
    local buttonText = settings[1]
    local callback = settings[2]
    
    local ButtonFrame = Instance.new("Frame")
    ButtonFrame.Name = "Button_" .. buttonText
    ButtonFrame.Size = UDim2.new(1, -20, 0, 30)
    ButtonFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    ButtonFrame.BorderSizePixel = 0
    ButtonFrame.Parent = ContentScrollingFrame
    ButtonFrame.Visible = (self.CurrentTab.Name == tabName)
    
    local Button = Instance.new("TextButton")
    Button.Name = "Button"
    Button.Text = buttonText
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.TextSize = 12
    Button.Font = Enum.Font.Gotham
    Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Button.Size = UDim2.new(1, 0, 1, 0)
    Button.Position = UDim2.new(0, 0, 0, 0)
    Button.BorderSizePixel = 0
    Button.Parent = ButtonFrame
    
    Button.MouseButton1Click:Connect(function()
        -- Animation
        Button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        game:GetService("TweenService"):Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
        
        if callback then
            callback()
        end
    end)
    
    table.insert(tab.Elements, {Instance = ButtonFrame})
    return ButtonFrame
end

function XenoHub:AddToggle(tabName, settings)
    local tab = self.Tabs[tabName]
    if not tab then return end
    
    local toggleText = settings[1]
    local callback = settings[2]
    local defaultValue = settings[3] or false
    
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Name = "Toggle_" .. toggleText
    ToggleFrame.Size = UDim2.new(1, -20, 0, 30)
    ToggleFrame.BackgroundTransparency = 1
    ToggleFrame.Parent = ContentScrollingFrame
    ToggleFrame.Visible = (self.CurrentTab.Name == tabName)
    
    local ToggleLabel = Instance.new("TextLabel")
    ToggleLabel.Name = "Label"
    ToggleLabel.Text = toggleText
    ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleLabel.TextSize = 12
    ToggleLabel.Font = Enum.Font.Gotham
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
    ToggleLabel.Position = UDim2.new(0, 0, 0, 0)
    ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    ToggleLabel.Parent = ToggleFrame
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Name = "Toggle"
    ToggleButton.Text = ""
    ToggleButton.Size = UDim2.new(0, 20, 0, 20)
    ToggleButton.Position = UDim2.new(1, -25, 0.5, -10)
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Parent = ToggleFrame
    
    local ToggleState = defaultValue
    
    local function UpdateToggle()
        if ToggleState then
            ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        else
            ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        end
    end
    
    ToggleButton.MouseButton1Click:Connect(function()
        ToggleState = not ToggleState
        UpdateToggle()
        
        if callback then
            callback(ToggleState)
        end
    end)
    
    UpdateToggle()
    
    table.insert(tab.Elements, {Instance = ToggleFrame})
    return ToggleFrame
end

function XenoHub:AddCheckbox(tabName, settings)
    local tab = self.Tabs[tabName]
    if not tab then return end
    
    local checkboxText = settings[1]
    local callback = settings[2]
    local defaultValue = settings[3] or false
    
    local CheckboxFrame = Instance.new("Frame")
    CheckboxFrame.Name = "Checkbox_" .. checkboxText
    CheckboxFrame.Size = UDim2.new(1, -20, 0, 30)
    CheckboxFrame.BackgroundTransparency = 1
    CheckboxFrame.Parent = ContentScrollingFrame
    CheckboxFrame.Visible = (self.CurrentTab.Name == tabName)
    
    local CheckboxLabel = Instance.new("TextLabel")
    CheckboxLabel.Name = "Label"
    CheckboxLabel.Text = checkboxText
    CheckboxLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    CheckboxLabel.TextSize = 12
    CheckboxLabel.Font = Enum.Font.Gotham
    CheckboxLabel.BackgroundTransparency = 1
    CheckboxLabel.Size = UDim2.new(0.7, 0, 1, 0)
    CheckboxLabel.Position = UDim2.new(0, 0, 0, 0)
    CheckboxLabel.TextXAlignment = Enum.TextXAlignment.Left
    CheckboxLabel.Parent = CheckboxFrame
    
    local CheckboxButton = Instance.new("TextButton")
    CheckboxButton.Name = "Checkbox"
    CheckboxButton.Text = "✖"
    CheckboxButton.TextSize = 14
    CheckboxButton.Font = Enum.Font.GothamBold
    CheckboxButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CheckboxButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CheckboxButton.Size = UDim2.new(0, 20, 0, 20)
    CheckboxButton.Position = UDim2.new(1, -25, 0.5, -10)
    CheckboxButton.BorderSizePixel = 0
    CheckboxButton.Parent = CheckboxFrame
    
    local CheckboxState = defaultValue
    
    local function UpdateCheckbox()
        if CheckboxState then
            CheckboxButton.Text = "✔"
            CheckboxButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        else
            CheckboxButton.Text = "✖"
            CheckboxButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        end
    end
    
    CheckboxButton.MouseButton1Click:Connect(function()
        CheckboxState = not CheckboxState
        UpdateCheckbox()
        
        if callback then
            callback(CheckboxState)
        end
    end)
    
    UpdateCheckbox()
    
    table.insert(tab.Elements, {Instance = CheckboxFrame})
    return CheckboxFrame
end

function XenoHub:AddLabel(tabName, settings)
    local tab = self.Tabs[tabName]
    if not tab then return end
    
    local labelText = settings[1]
    
    local LabelFrame = Instance.new("Frame")
    LabelFrame.Name = "Label_" .. labelText
    LabelFrame.Size = UDim2.new(1, -20, 0, 30)
    LabelFrame.BackgroundTransparency = 1
    LabelFrame.Parent = ContentScrollingFrame
    LabelFrame.Visible = (self.CurrentTab.Name == tabName)
    
    local Label = Instance.new("TextLabel")
    Label.Name = "Label"
    Label.Text = labelText
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.TextSize = 12
    Label.Font = Enum.Font.Gotham
    Label.BackgroundTransparency = 1
    Label.Size = UDim2.new(1, 0, 1, 0)
    Label.Position = UDim2.new(0, 0, 0, 0)
    Label.TextXAlignment = Enum.TextXAlignment.Left
    Label.Parent = LabelFrame
    
    table.insert(tab.Elements, {Instance = LabelFrame})
    return LabelFrame
end

function XenoHub:AddDropdown(tabName, settings)
    local tab = self.Tabs[tabName]
    if not tab then return end
    
    local dropdownText = settings[1]
    local options = settings[2]
    local callback = settings[3]
    local defaultValue = settings[4] or options[1]
    
    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Name = "Dropdown_" .. dropdownText
    DropdownFrame.Size = UDim2.new(1, -20, 0, 30)
    DropdownFrame.BackgroundTransparency = 1
    DropdownFrame.Parent = ContentScrollingFrame
    DropdownFrame.Visible = (self.CurrentTab.Name == tabName)
    
    local DropdownLabel = Instance.new("TextLabel")
    DropdownLabel.Name = "Label"
    DropdownLabel.Text = dropdownText
    DropdownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownLabel.TextSize = 12
    DropdownLabel.Font = Enum.Font.Gotham
    DropdownLabel.BackgroundTransparency = 1
    DropdownLabel.Size = UDim2.new(0.7, 0, 1, 0)
    DropdownLabel.Position = UDim2.new(0, 0, 0, 0)
    DropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
    DropdownLabel.Parent = DropdownFrame
    
    local DropdownButton = Instance.new("TextButton")
    DropdownButton.Name = "DropdownButton"
    DropdownButton.Text = defaultValue
    DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownButton.TextSize = 12
    DropdownButton.Font = Enum.Font.Gotham
    DropdownButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    DropdownButton.Size = UDim2.new(0.25, 0, 0.8, 0)
    DropdownButton.Position = UDim2.new(0.75, -5, 0.1, 0)
    DropdownButton.BorderSizePixel = 0
    DropdownButton.Parent = DropdownFrame
    
    local DropdownArrow = Instance.new("TextButton")
    DropdownArrow.Name = "DropdownArrow"
    DropdownArrow.Text = "⬇"
    DropdownArrow.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownArrow.TextSize = 12
    DropdownArrow.Font = Enum.Font.GothamBold
    DropdownArrow.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    DropdownArrow.Size = UDim2.new(0, 20, 0.8, 0)
    DropdownArrow.Position = UDim2.new(1, -25, 0.1, 0)
    DropdownArrow.BorderSizePixel = 0
    DropdownArrow.Parent = DropdownFrame
    
    local DropdownList = Instance.new("ScrollingFrame")
    DropdownList.Name = "DropdownList"
    DropdownList.Size = UDim2.new(0.25, 0, 0, 100)
    DropdownList.Position = UDim2.new(0.75, -5, 1, 5)
    DropdownList.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    DropdownList.BorderSizePixel = 0
    DropdownList.ScrollBarThickness = 5
    DropdownList.CanvasSize = UDim2.new(0, 0, 0, #options * 25)
    DropdownList.Visible = false
    DropdownList.Parent = DropdownFrame
    
    local DropdownListLayout = Instance.new("UIListLayout")
    DropdownListLayout.Name = "DropdownListLayout"
    DropdownListLayout.Padding = UDim.new(0, 0)
    DropdownListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    DropdownListLayout.Parent = DropdownList
    
    local isOpen = false
    
    local function UpdateDropdown()
        if isOpen then
            DropdownArrow.Text = "⬆"
            DropdownList.Visible = true
        else
            DropdownArrow.Text = "⬇"
            DropdownList.Visible = false
        end
    end
    
    -- Create options
    for i, option in ipairs(options) do
        local OptionButton = Instance.new("TextButton")
        OptionButton.Name = "Option_" .. option
        OptionButton.Text = option
        OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OptionButton.TextSize = 12
        OptionButton.Font = Enum.Font.Gotham
        OptionButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        OptionButton.Size = UDim2.new(1, 0, 0, 25)
        OptionButton.BorderSizePixel = 0
        OptionButton.LayoutOrder = i
        OptionButton.Parent = DropdownList
        
        OptionButton.MouseButton1Click:Connect(function()
            DropdownButton.Text = option
            isOpen = false
            UpdateDropdown()
            
            if callback then
                callback(option)
            end
        end)
    end
    
    DropdownArrow.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        UpdateDropdown()
    end)
    
    DropdownButton.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        UpdateDropdown()
    end)
    
    table.insert(tab.Elements, {Instance = DropdownFrame})
    return DropdownFrame
end

function XenoHub:AddSection(tabName, settings)
    local tab = self.Tabs[tabName]
    if not tab then return end
    
    local sectionText = settings[1]
    
    local SectionFrame = Instance.new("Frame")
    SectionFrame.Name = "Section_" .. sectionText
    SectionFrame.Size = UDim2.new(1, -20, 0, 30)
    SectionFrame.BackgroundTransparency = 1
    SectionFrame.Parent = ContentScrollingFrame
    SectionFrame.Visible = (self.CurrentTab.Name == tabName)
    
    local SectionLabel = Instance.new("TextLabel")
    SectionLabel.Name = "Label"
    SectionLabel.Text = sectionText
    SectionLabel.TextColor3 = Color3.fromRGB(0, 120, 255)
    SectionLabel.TextSize = 14
    SectionLabel.Font = Enum.Font.GothamBold
    SectionLabel.BackgroundTransparency = 1
    SectionLabel.Size = UDim2.new(1, 0, 1, 0)
    SectionLabel.Position = UDim2.new(0, 0, 0, 0)
    SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
    SectionLabel.Parent = SectionFrame
    
    table.insert(tab.Elements, {Instance = SectionFrame})
    return SectionFrame
end

function XenoHub:AddInput(tabName, settings)
    local tab = self.Tabs[tabName]
    if not tab then return end
    
    local inputText = settings[1]
    local callback = settings[2]
    local placeholder = settings[3] or "Enter text..."
    
    local InputFrame = Instance.new("Frame")
    InputFrame.Name = "Input_" .. inputText
    InputFrame.Size = UDim2.new(1, -20, 0, 30)
    InputFrame.BackgroundTransparency = 1
    InputFrame.Parent = ContentScrollingFrame
    InputFrame.Visible = (self.CurrentTab.Name == tabName)
    
    local InputLabel = Instance.new("TextLabel")
    InputLabel.Name = "Label"
    InputLabel.Text = inputText
    InputLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    InputLabel.TextSize = 12
    InputLabel.Font = Enum.Font.Gotham
    InputLabel.BackgroundTransparency = 1
    InputLabel.Size = UDim2.new(0.7, 0, 1, 0)
    InputLabel.Position = UDim2.new(0, 0, 0, 0)
    InputLabel.TextXAlignment = Enum.TextXAlignment.Left
    InputLabel.Parent = InputFrame
    
    local InputBox = Instance.new("TextBox")
    InputBox.Name = "InputBox"
    InputBox.Text = ""
    InputBox.PlaceholderText = placeholder
    InputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    InputBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    InputBox.TextSize = 12
    InputBox.Font = Enum.Font.Gotham
    InputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    InputBox.Size = UDim2.new(0.25, 0, 0.8, 0)
    InputBox.Position = UDim2.new(0.75, -5, 0.1, 0)
    InputBox.BorderSizePixel = 0
    InputBox.Parent = InputFrame
    
    InputBox.FocusLost:Connect(function(enterPressed)
        if enterPressed and callback then
            callback(InputBox.Text)
        end
    end)
    
    table.insert(tab.Elements, {Instance = InputFrame})
    return InputFrame
end

function XenoHub:ShowNotification(settings)
    local message = settings[1] or "Welcome to the XENO HUB"
    local duration = settings[2] or 3
    
    local Notification = Instance.new("Frame")
    Notification.Name = "Notification"
    Notification.Size = UDim2.new(0, 250, 0, 60)
    Notification.Position = UDim2.new(0.5, -125, 0.1, 0)
    Notification.BackgroundColor3 = Color3.fromRGB(0, 100, 255)
    Notification.BorderSizePixel = 0
    Notification.Parent = XenoWindow
    
    local NotificationLabel = Instance.new("TextLabel")
    NotificationLabel.Name = "Message"
    NotificationLabel.Text = message
    NotificationLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    NotificationLabel.TextSize = 14
    NotificationLabel.Font = Enum.Font.Gotham
    NotificationLabel.BackgroundTransparency = 1
    NotificationLabel.Size = UDim2.new(1, -20, 0.7, 0)
    NotificationLabel.Position = UDim2.new(0, 10, 0, 10)
    NotificationLabel.TextXAlignment = Enum.TextXAlignment.Left
    NotificationLabel.Parent = Notification
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Text = "✖"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 14
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Position = UDim2.new(1, -25, 0, 5)
    CloseButton.BorderSizePixel = 0
    CloseButton.Parent = Notification
    
    local ConfirmButton = Instance.new("TextButton")
    ConfirmButton.Name = "ConfirmButton"
    ConfirmButton.Text = "✔"
    ConfirmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ConfirmButton.TextSize = 14
    ConfirmButton.Font = Enum.Font.GothamBold
    ConfirmButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
    ConfirmButton.Size = UDim2.new(0, 20, 0, 20)
    ConfirmButton.Position = UDim2.new(1, -50, 0, 5)
    ConfirmButton.BorderSizePixel = 0
    ConfirmButton.Parent = Notification
    
    -- Animation
    Notification.Size = UDim2.new(0, 0, 0, 60)
    Notification.Position = UDim2.new(0.5, 0, 0.1, 0)
    
    local tweenIn = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    game:GetService("TweenService"):Create(Notification, tweenIn, {Size = UDim2.new(0, 250, 0, 60), Position = UDim2.new(0.5, -125, 0.1, 0)}):Play()
    
    -- Auto close after duration
    if duration > 0 then
        delay(duration, function()
            local tweenOut = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
            game:GetService("TweenService"):Create(Notification, tweenOut, {Size = UDim2.new(0, 0, 0, 60), Position = UDim2.new(0.5, 0, 0.1, 0)}):Play()
            wait(0.3)
            Notification:Destroy()
        end)
    end
    
    -- Button functionality
    CloseButton.MouseButton1Click:Connect(function()
        Notification:Destroy()
    end)
    
    ConfirmButton.MouseButton1Click:Connect(function()
        Notification:Destroy()
    end)
    
    return Notification
end

-- Update scrolling frames
ContentListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    ContentScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, ContentListLayout.AbsoluteContentSize.Y + 20)
end)

TabListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    TabScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, TabListLayout.AbsoluteContentSize.Y + 20)
end)

-- Image box functionality
ImageBox.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local url = "https://example.com/image.png" -- Replace with your image URL
        ImageBox.Image = url
    end
end)

-- Example usage
XenoWindow.Parent = game:GetService("CoreGui")

local MainTab = XenoHub:AddTab("Main")
local SettingsTab = XenoHub:AddTab("Settings")

-- Main Tab
XenoHub:AddButton("Main", {"Dark Theme", function()
    print("Dark theme activated")
end})

XenoHub:AddToggle("Main", {"Enable Feature", function(state)
    print("Feature toggled:", state)
end})

XenoHub:AddCheckbox("Main", {"Advanced Mode", function(state)
    print("Advanced mode:", state)
end})

XenoHub:AddLabel("Main", {"Welcome to XENO HUB"})

XenoHub:AddDropdown("Main", {"Select Option", {"Option 1", "Option 2", "Option 3"}, function(selected)
    print("Selected:", selected)
end})

XenoHub:AddSection("Main", {"Settings"})

XenoHub:AddInput("Main", {"Username", function(text)
    print("Username entered:", text)
end, "Enter username..."})

-- Settings Tab
XenoHub:AddButton("Settings", {"Reset All", function()
    print("Reset all settings")
end})

XenoHub:AddToggle("Settings", {"Enable Notifications", function(state)
    print("Notifications:", state)
end})

-- Show notification
XenoHub:ShowNotification({"Welcome to the XENO HUB", 5})

return XenoHub
