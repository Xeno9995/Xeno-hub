--[[
    XENO HUB UI Library
    Created by: [Your Name]
    Version: 1.0.0
    Description: Professional UI library for Roblox experiences
--]]

local XENO_HUB = {}

--// Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

--// Variables
local Dragging, DragInput, DragStart, StartPos
local CurrentTab = nil
local CurrentSection = nil
local Theme = {
    Background = Color3.fromRGB(25, 25, 25),
    Header = Color3.fromRGB(30, 30, 30),
    Text = Color3.fromRGB(255, 255, 255),
    Button = Color3.fromRGB(45, 45, 45),
    ButtonHover = Color3.fromRGB(55, 55, 55),
    ToggleOff = Color3.fromRGB(80, 80, 80),
    ToggleOn = Color3.fromRGB(0, 170, 255),
    Slider = Color3.fromRGB(0, 170, 255),
    Dropdown = Color3.fromRGB(45, 45, 45),
    DropdownHover = Color3.fromRGB(55, 55, 55),
    TextBox = Color3.fromRGB(35, 35, 35),
    Section = Color3.fromRGB(35, 35, 35)
}

--// Utility Functions
local function MakeDraggable(frame, handle)
    handle = handle or frame
    
    local function Update(input)
        local delta = input.Position - DragStart
        frame.Position = UDim2.new(
            StartPos.X.Scale, 
            StartPos.X.Offset + delta.X, 
            StartPos.Y.Scale, 
            StartPos.Y.Offset + delta.Y
        )
    end
    
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            Dragging = true
            DragStart = input.Position
            StartPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end)
    
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and Dragging then
            DragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then
            Update(input)
        end
    end)
end

local function TweenObject(obj, properties, duration, style, direction)
    local tweenInfo = TweenInfo.new(duration or 0.2, style or Enum.EasingStyle.Quad, direction or Enum.EasingDirection.Out)
    local tween = TweenService:Create(obj, tweenInfo, properties)
    tween:Play()
    return tween
end

--// Main Functions
function XENO_HUB.CreateWindow(name)
    local XENO_HUB = Instance.new("ScreenGui")
    if syn and syn.protect_gui then
        syn.protect_gui(XENO_HUB)
    elseif gethui then
        XENO_HUB.Parent = gethui()
    else
        XENO_HUB.Parent = game:GetService("CoreGui")
    end
    XENO_HUB.Name = "XENO_HUB"
    XENO_HUB.ZIndexBehavior = Enum.ZIndexBehavior.Global
    XENO_HUB.DisplayOrder = 999
    XENO_HUB.ResetOnSpawn = false
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 500, 0, 550)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -275)
    MainFrame.BackgroundColor3 = Theme.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Parent = XENO_HUB
    
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 30)
    TopBar.BackgroundColor3 = Theme.Header
    TopBar.BorderSizePixel = 0
    TopBar.Parent = MainFrame
    
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(0, 200, 1, 0)
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = name or "XENO HUB"
    Title.TextColor3 = Theme.Text
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 14
    Title.Parent = TopBar
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 30, 1, 0)
    CloseButton.Position = UDim2.new(1, -30, 0, 0)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Theme.Text
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 14
    CloseButton.Parent = TopBar
    
    CloseButton.MouseEnter:Connect(function()
        TweenObject(CloseButton, {BackgroundColor3 = Color3.fromRGB(255, 80, 80)}, 0.2)
    end)
    
    CloseButton.MouseLeave:Connect(function()
        TweenObject(CloseButton, {BackgroundColor3 = Color3.fromRGB(255, 50, 50)}, 0.2)
    end)
    
    CloseButton.MouseButton1Click:Connect(function()
        XENO_HUB:Destroy()
    end)
    
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Size = UDim2.new(1, 0, 0, 40)
    TabContainer.Position = UDim2.new(0, 0, 0, 30)
    TabContainer.BackgroundColor3 = Theme.Header
    TabContainer.BorderSizePixel = 0
    TabContainer.Parent = MainFrame
    
    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.Name = "TabListLayout"
    TabListLayout.FillDirection = Enum.FillDirection.Horizontal
    TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabListLayout.Padding = UDim.new(0, 0)
    TabListLayout.Parent = TabContainer
    
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Size = UDim2.new(1, -20, 1, -80)
    ContentContainer.Position = UDim2.new(0, 10, 0, 70)
    ContentContainer.BackgroundTransparency = 1
    ContentContainer.ClipsDescendants = true
    ContentContainer.Parent = MainFrame
    
    MakeDraggable(MainFrame, TopBar)
    
    local Window = {}
    Window.Tabs = {}
    
    function Window:CreateTab(name, icon)
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name .. "TabButton"
        TabButton.Size = UDim2.new(0, 100, 1, 0)
        TabButton.BackgroundColor3 = Theme.Header
        TabButton.BorderSizePixel = 0
        TabButton.Text = name
        TabButton.TextColor3 = Theme.Text
        TabButton.Font = Enum.Font.Gotham
        TabButton.TextSize = 14
        TabButton.AutoButtonColor = false
        TabButton.LayoutOrder = #Window.Tabs + 1
        TabButton.Parent = TabContainer
        
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = name .. "TabContent"
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.Position = UDim2.new(0, 0, 0, 0)
        TabContent.BackgroundTransparency = 1
        TabContent.ScrollBarThickness = 3
        TabContent.ScrollBarImageColor3 = Theme.Header
        TabContent.Visible = false
        TabContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
        TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContent.Parent = ContentContainer
        
        local TabContentLayout = Instance.new("UIListLayout")
        TabContentLayout.Name = "TabContentLayout"
        TabContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
        TabContentLayout.Padding = UDim.new(0, 10)
        TabContentLayout.Parent = TabContent
        
        TabContentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContent.CanvasSize = UDim2.new(0, 0, 0, TabContentLayout.AbsoluteContentSize.Y + 10)
        end)
        
        if #Window.Tabs == 0 then
            CurrentTab = TabContent
            TabContent.Visible = true
            TweenObject(TabButton, {BackgroundColor3 = Theme.Button}, 0.2)
        end
        
        TabButton.MouseButton1Click:Connect(function()
            if CurrentTab ~= TabContent then
                CurrentTab.Visible = false
                for _, tab in pairs(Window.Tabs) do
                    TweenObject(tab.Button, {BackgroundColor3 = Theme.Header}, 0.2)
                end
                TabContent.Visible = true
                TweenObject(TabButton, {BackgroundColor3 = Theme.Button}, 0.2)
                CurrentTab = TabContent
            end
        end)
        
        TabButton.MouseEnter:Connect(function()
            if CurrentTab ~= TabContent then
                TweenObject(TabButton, {BackgroundColor3 = Theme.ButtonHover}, 0.2)
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if CurrentTab ~= TabContent then
                TweenObject(TabButton, {BackgroundColor3 = Theme.Header}, 0.2)
            end
        end)
        
        local Tab = {}
        Tab.Button = TabButton
        Tab.Content = TabContent
        Tab.Sections = {}
        
        function Tab:CreateSection(name, side)
            side = side or "Left"
            
            local SectionContainer = Instance.new("Frame")
            SectionContainer.Name = name .. "Section"
            SectionContainer.Size = UDim2.new(0.5, -5, 0, 0)
            SectionContainer.Position = side == "Left" and UDim2.new(0, 0, 0, 0) or UDim2.new(0.5, 5, 0, 0)
            SectionContainer.BackgroundColor3 = Theme.Section
            SectionContainer.BorderSizePixel = 0
            SectionContainer.AutomaticSize = Enum.AutomaticSize.Y
            SectionContainer.ClipsDescendants = true
            SectionContainer.LayoutOrder = #Tab.Sections + 1
            SectionContainer.Parent = TabContent
            
            local SectionTitle = Instance.new("TextLabel")
            SectionTitle.Name = "SectionTitle"
            SectionTitle.Size = UDim2.new(1, 0, 0, 30)
            SectionTitle.Position = UDim2.new(0, 0, 0, 0)
            SectionTitle.BackgroundColor3 = Theme.Header
            SectionTitle.BorderSizePixel = 0
            SectionTitle.Text = name
            SectionTitle.TextColor3 = Theme.Text
            SectionTitle.Font = Enum.Font.GothamBold
            SectionTitle.TextSize = 14
            SectionTitle.Parent = SectionContainer
            
            local SectionContent = Instance.new("Frame")
            SectionContent.Name = "SectionContent"
            SectionContent.Size = UDim2.new(1, -10, 0, 0)
            SectionContent.Position = UDim2.new(0, 5, 0, 35)
            SectionContent.BackgroundTransparency = 1
            SectionContent.AutomaticSize = Enum.AutomaticSize.Y
            SectionContent.Parent = SectionContainer
            
            local SectionContentLayout = Instance.new("UIListLayout")
            SectionContentLayout.Name = "SectionContentLayout"
            SectionContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
            SectionContentLayout.Padding = UDim.new(0, 5)
            SectionContentLayout.Parent = SectionContent
            
            SectionContentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                SectionContent.Size = UDim2.new(1, -10, 0, SectionContentLayout.AbsoluteContentSize.Y)
                SectionContainer.Size = UDim2.new(0.5, -5, 0, SectionContentLayout.AbsoluteContentSize.Y + 35)
            end)
            
            local Section = {}
            Section.Container = SectionContainer
            Section.Content = SectionContent
            
            function Section:CreateButton(name, callback)
                local Button = Instance.new("TextButton")
                Button.Name = name .. "Button"
                Button.Size = UDim2.new(1, 0, 0, 30)
                Button.BackgroundColor3 = Theme.Button
                Button.BorderSizePixel = 0
                Button.Text = name
                Button.TextColor3 = Theme.Text
                Button.Font = Enum.Font.Gotham
                Button.TextSize = 14
                Button.AutoButtonColor = false
                Button.LayoutOrder = #SectionContent:GetChildren()
                Button.Parent = SectionContent
                
                Button.MouseButton1Click:Connect(function()
                    if callback then
                        callback()
                    end
                end)
                
                Button.MouseEnter:Connect(function()
                    TweenObject(Button, {BackgroundColor3 = Theme.ButtonHover}, 0.2)
                end)
                
                Button.MouseLeave:Connect(function()
                    TweenObject(Button, {BackgroundColor3 = Theme.Button}, 0.2)
                end)
                
                return Button
            end
            
            function Section:CreateToggle(name, default, callback)
                local Toggle = Instance.new("Frame")
                Toggle.Name = name .. "Toggle"
                Toggle.Size = UDim2.new(1, 0, 0, 30)
                Toggle.BackgroundTransparency = 1
                Toggle.LayoutOrder = #SectionContent:GetChildren()
                Toggle.Parent = SectionContent
                
                local ToggleLabel = Instance.new("TextLabel")
                ToggleLabel.Name = "ToggleLabel"
                ToggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
                ToggleLabel.BackgroundTransparency = 1
                ToggleLabel.Text = name
                ToggleLabel.TextColor3 = Theme.Text
                ToggleLabel.Font = Enum.Font.Gotham
                ToggleLabel.TextSize = 14
                ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
                ToggleLabel.Parent = Toggle
                
                local ToggleButton = Instance.new("TextButton")
                ToggleButton.Name = "ToggleButton"
                ToggleButton.Size = UDim2.new(0.25, 0, 0, 20)
                ToggleButton.Position = UDim2.new(0.75, 0, 0.5, -10)
                ToggleButton.BackgroundColor3 = default and Theme.ToggleOn or Theme.ToggleOff
                ToggleButton.BorderSizePixel = 0
                ToggleButton.Text = ""
                ToggleButton.AutoButtonColor = false
                ToggleButton.Parent = Toggle
                
                local ToggleCorner = Instance.new("UICorner")
                ToggleCorner.Name = "ToggleCorner"
                ToggleCorner.CornerRadius = UDim.new(0, 10)
                ToggleCorner.Parent = ToggleButton
                
                local ToggleState = default or false
                
                ToggleButton.MouseButton1Click:Connect(function()
                    ToggleState = not ToggleState
                    if ToggleState then
                        TweenObject(ToggleButton, {BackgroundColor3 = Theme.ToggleOn}, 0.2)
                    else
                        TweenObject(ToggleButton, {BackgroundColor3 = Theme.ToggleOff}, 0.2)
                    end
                    if callback then
                        callback(ToggleState)
                    end
                end)
                
                local ToggleObject = {}
                ToggleObject.Value = ToggleState
                
                function ToggleObject:Set(value)
                    ToggleState = value
                    if ToggleState then
                        TweenObject(ToggleButton, {BackgroundColor3 = Theme.ToggleOn}, 0.2)
                    else
                        TweenObject(ToggleButton, {BackgroundColor3 = Theme.ToggleOff}, 0.2)
                    end
                    if callback then
                        callback(ToggleState)
                    end
                end
                
                return ToggleObject
            end
            
            function Section:CreateSlider(name, min, max, default, callback)
                local Slider = Instance.new("Frame")
                Slider.Name = name .. "Slider"
                Slider.Size = UDim2.new(1, 0, 0, 50)
                Slider.BackgroundTransparency = 1
                Slider.LayoutOrder = #SectionContent:GetChildren()
                Slider.Parent = SectionContent
                
                local SliderLabel = Instance.new("TextLabel")
                SliderLabel.Name = "SliderLabel"
                SliderLabel.Size = UDim2.new(1, 0, 0, 20)
                SliderLabel.BackgroundTransparency = 1
                SliderLabel.Text = name .. ": " .. default
                SliderLabel.TextColor3 = Theme.Text
                SliderLabel.Font = Enum.Font.Gotham
                SliderLabel.TextSize = 14
                SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
                SliderLabel.Parent = Slider
                
                local SliderTrack = Instance.new("Frame")
                SliderTrack.Name = "SliderTrack"
                SliderTrack.Size = UDim2.new(1, 0, 0, 5)
                SliderTrack.Position = UDim2.new(0, 0, 0, 25)
                SliderTrack.BackgroundColor3 = Theme.Button
                SliderTrack.BorderSizePixel = 0
                SliderTrack.Parent = Slider
                
                local SliderTrackCorner = Instance.new("UICorner")
                SliderTrackCorner.Name = "SliderTrackCorner"
                SliderTrackCorner.CornerRadius = UDim.new(0, 3)
                SliderTrackCorner.Parent = SliderTrack
                
                local SliderFill = Instance.new("Frame")
                SliderFill.Name = "SliderFill"
                SliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
                SliderFill.BackgroundColor3 = Theme.Slider
                SliderFill.BorderSizePixel = 0
                SliderFill.Parent = SliderTrack
                
                local SliderFillCorner = Instance.new("UICorner")
                SliderFillCorner.Name = "SliderFillCorner"
                SliderFillCorner.CornerRadius = UDim.new(0, 3)
                SliderFillCorner.Parent = SliderFill
                
                local SliderButton = Instance.new("TextButton")
                SliderButton.Name = "SliderButton"
                SliderButton.Size = UDim2.new(0, 15, 0, 15)
                SliderButton.Position = UDim2.new((default - min) / (max - min), -7.5, 0.5, -7.5)
                SliderButton.BackgroundColor3 = Theme.Text
                SliderButton.BorderSizePixel = 0
                SliderButton.Text = ""
                SliderButton.AutoButtonColor = false
                SliderButton.Parent = SliderTrack
                
                local SliderButtonCorner = Instance.new("UICorner")
                SliderButtonCorner.Name = "SliderButtonCorner"
                SliderButtonCorner.CornerRadius = UDim.new(0, 7)
                SliderButtonCorner.Parent = SliderButton
                
                local Dragging = false
                
                local function UpdateSlider(input)
                    local pos = UDim2.new(
                        math.clamp((input.Position.X - SliderTrack.AbsolutePosition.X) / SliderTrack.AbsoluteSize.X, 0, 1),
                        0,
                        0.5,
                        0
                    )
                    SliderFill.Size = UDim2.new(pos.X.Scale, 0, 1, 0)
                    SliderButton.Position = UDim2.new(pos.X.Scale, -7.5, 0.5, -7.5)
                    
                    local value = math.floor(min + (max - min) * pos.X.Scale)
                    SliderLabel.Text = name .. ": " .. value
                    
                    if callback then
                        callback(value)
                    end
                end
                
                SliderButton.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Dragging = true
                    end
                end)
                
                SliderButton.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Dragging = false
                    end
                end)
                
                UserInputService.InputChanged:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseMovement and Dragging then
                        UpdateSlider(input)
                    end
                end)
                
                SliderTrack.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        UpdateSlider(input)
                    end
                end)
                
                local SliderObject = {}
                SliderObject.Value = default
                
                function SliderObject:Set(value)
                    value = math.clamp(value, min, max)
                    local pos = UDim2.new((value - min) / (max - min), 0, 0.5, 0)
                    SliderFill.Size = UDim2.new(pos.X.Scale, 0, 1, 0)
                    SliderButton.Position = UDim2.new(pos.X.Scale, -7.5, 0.5, -7.5)
                    SliderLabel.Text = name .. ": " .. value
                    if callback then
                        callback(value)
                    end
                end
                
                return SliderObject
            end
            
            function Section:CreateDropdown(name, options, default, callback)
                local Dropdown = Instance.new("Frame")
                Dropdown.Name = name .. "Dropdown"
                Dropdown.Size = UDim2.new(1, 0, 0, 30)
                Dropdown.BackgroundTransparency = 1
                Dropdown.LayoutOrder = #SectionContent:GetChildren()
                Dropdown.ClipsDescendants = true
                Dropdown.Parent = SectionContent
                
                local DropdownButton = Instance.new("TextButton")
                DropdownButton.Name = "DropdownButton"
                DropdownButton.Size = UDim2.new(1, 0, 0, 30)
                DropdownButton.BackgroundColor3 = Theme.Dropdown
                DropdownButton.BorderSizePixel = 0
                DropdownButton.Text = name .. ": " .. (default or options[1])
                DropdownButton.TextColor3 = Theme.Text
                DropdownButton.Font = Enum.Font.Gotham
                DropdownButton.TextSize = 14
                DropdownButton.TextXAlignment = Enum.TextXAlignment.Left
                DropdownButton.AutoButtonColor = false
                DropdownButton.Parent = Dropdown
                
                local DropdownButtonPadding = Instance.new("UIPadding")
                DropdownButtonPadding.Name = "DropdownButtonPadding"
                DropdownButtonPadding.PaddingLeft = UDim.new(0, 10)
                DropdownButtonPadding.Parent = DropdownButton
                
                local DropdownList = Instance.new("Frame")
                DropdownList.Name = "DropdownList"
                DropdownList.Size = UDim2.new(1, 0, 0, 0)
                DropdownList.Position = UDim2.new(0, 0, 0, 35)
                DropdownList.BackgroundColor3 = Theme.Dropdown
                DropdownList.BorderSizePixel = 0
                DropdownList.ClipsDescendants = true
                DropdownList.Parent = Dropdown
                
                local DropdownListLayout = Instance.new("UIListLayout")
                DropdownListLayout.Name = "DropdownListLayout"
                DropdownListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                DropdownListLayout.Padding = UDim.new(0, 1)
                DropdownListLayout.Parent = DropdownList
                
                DropdownListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                    DropdownList.Size = UDim2.new(1, 0, 0, DropdownListLayout.AbsoluteContentSize.Y)
                end)
                
                local IsOpen = false
                local Selected = default or options[1]
                
                local function ToggleDropdown()
                    IsOpen = not IsOpen
                    if IsOpen then
                        Dropdown.Size = UDim2.new(1, 0, 0, 30 + DropdownListLayout.AbsoluteContentSize.Y + 5)
                    else
                        Dropdown.Size = UDim2.new(1, 0, 0, 30)
                    end
                end
                
                for i, option in pairs(options) do
                    local OptionButton = Instance.new("TextButton")
                    OptionButton.Name = option .. "Option"
                    OptionButton.Size = UDim2.new(1, 0, 0, 25)
                    OptionButton.BackgroundColor3 = Theme.Dropdown
                    OptionButton.BorderSizePixel = 0
                    OptionButton.Text = option
                    OptionButton.TextColor3 = Theme.Text
                    OptionButton.Font = Enum.Font.Gotham
                    OptionButton.TextSize = 14
                    OptionButton.TextXAlignment = Enum.TextXAlignment.Left
                    OptionButton.AutoButtonColor = false
                    OptionButton.LayoutOrder = i
                    OptionButton.Parent = DropdownList
                    
                    local OptionButtonPadding = Instance.new("UIPadding")
                    OptionButtonPadding.Name = "OptionButtonPadding"
                    OptionButtonPadding.PaddingLeft = UDim.new(0, 10)
                    OptionButtonPadding.Parent = OptionButton
                    
                    OptionButton.MouseEnter:Connect(function()
                        TweenObject(OptionButton, {BackgroundColor3 = Theme.DropdownHover}, 0.2)
                    end)
                    
                    OptionButton.MouseLeave:Connect(function()
                        TweenObject(OptionButton, {BackgroundColor3 = Theme.Dropdown}, 0.2)
                    end)
                    
                    OptionButton.MouseButton1Click:Connect(function()
                        Selected = option
                        DropdownButton.Text = name .. ": " .. Selected
                        ToggleDropdown()
                        if callback then
                            callback(Selected)
                        end
                    end)
                end
                
                DropdownButton.MouseButton1Click:Connect(ToggleDropdown)
                
                DropdownButton.MouseEnter:Connect(function()
                    TweenObject(DropdownButton, {BackgroundColor3 = Theme.DropdownHover}, 0.2)
                end)
                
                DropdownButton.MouseLeave:Connect(function()
                    TweenObject(DropdownButton, {BackgroundColor3 = Theme.Dropdown}, 0.2)
                end)
                
                local DropdownObject = {}
                DropdownObject.Value = Selected
                
                function DropdownObject:Set(value)
                    if table.find(options, value) then
                        Selected = value
                        DropdownButton.Text = name .. ": " .. Selected
                        if callback then
                            callback(Selected)
                        end
                    end
                end
                
                function DropdownObject:Refresh(newOptions)
                    for _, child in pairs(DropdownList:GetChildren()) do
                        if child:IsA("TextButton") then
                            child:Destroy()
                        end
                    end
                    
                    options = newOptions
                    Selected = newOptions[1]
                    DropdownButton.Text = name .. ": " .. Selected
                    
                    for i, option in pairs(newOptions) do
                        local OptionButton = Instance.new("TextButton")
                        OptionButton.Name = option .. "Option"
                        OptionButton.Size = UDim2.new(1, 0, 0, 25)
                        OptionButton.BackgroundColor3 = Theme.Dropdown
                        OptionButton.BorderSizePixel = 0
                        OptionButton.Text = option
                        OptionButton.TextColor3 = Theme.Text
                        OptionButton.Font = Enum.Font.Gotham
                        OptionButton.TextSize = 14
                        OptionButton.TextXAlignment = Enum.TextXAlignment.Left
                        OptionButton.AutoButtonColor = false
                        OptionButton.LayoutOrder = i
                        OptionButton.Parent = DropdownList
                        
                        local OptionButtonPadding = Instance.new("UIPadding")
                        OptionButtonPadding.Name = "OptionButtonPadding"
                        OptionButtonPadding.PaddingLeft = UDim.new(0, 10)
                        OptionButtonPadding.Parent = OptionButton
                        
                        OptionButton.MouseEnter:Connect(function()
                            TweenObject(OptionButton, {BackgroundColor3 = Theme.DropdownHover}, 0.2)
                        end)
                        
                        OptionButton.MouseLeave:Connect(function()
                            TweenObject(OptionButton, {BackgroundColor3 = Theme.Dropdown}, 0.2)
                        end)
                        
                        OptionButton.MouseButton1Click:Connect(function()
                            Selected = option
                            DropdownButton.Text = name .. ": " .. Selected
                            ToggleDropdown()
                            if callback then
                                callback(Selected)
                            end
                        end)
                    end
                end
                
                return DropdownObject
            end
            
            function Section:CreateTextBox(name, placeholder, callback)
                local TextBoxContainer = Instance.new("Frame")
                TextBoxContainer.Name = name .. "TextBox"
                TextBoxContainer.Size = UDim2.new(1, 0, 0, 30)
                TextBoxContainer.BackgroundTransparency = 1
                TextBoxContainer.LayoutOrder = #SectionContent:GetChildren()
                TextBoxContainer.Parent = SectionContent
                
                local TextBoxLabel = Instance.new("TextLabel")
                TextBoxLabel.Name = "TextBoxLabel"
                TextBoxLabel.Size = UDim2.new(0.3, 0, 1, 0)
                TextBoxLabel.BackgroundTransparency = 1
                TextBoxLabel.Text = name
                TextBoxLabel.TextColor3 = Theme.Text
                TextBoxLabel.Font = Enum.Font.Gotham
                TextBoxLabel.TextSize = 14
                TextBoxLabel.TextXAlignment = Enum.TextXAlignment.Left
                TextBoxLabel.Parent = TextBoxContainer
                
                local TextBox = Instance.new("TextBox")
                TextBox.Name = "TextBox"
                TextBox.Size = UDim2.new(0.7, 0, 1, 0)
                TextBox.Position = UDim2.new(0.3, 0, 0, 0)
                TextBox.BackgroundColor3 = Theme.TextBox
                TextBox.BorderSizePixel = 0
                TextBox.Text = ""
                TextBox.PlaceholderText = placeholder or ""
                TextBox.TextColor3 = Theme.Text
                TextBox.Font = Enum.Font.Gotham
                TextBox.TextSize = 14
                TextBox.Parent = TextBoxContainer
                
                TextBox.FocusLost:Connect(function(enterPressed)
                    if enterPressed and callback then
                        callback(TextBox.Text)
                    end
                end)
                
                local TextBoxObject = {}
                
                function TextBoxObject:Set(value)
                    TextBox.Text = tostring(value)
                end
                
                function TextBoxObject:Get()
                    return TextBox.Text
                end
                
                return TextBoxObject
            end
            
            function Section:CreateLabel(text)
                local Label = Instance.new("TextLabel")
                Label.Name = "Label"
                Label.Size = UDim2.new(1, 0, 0, 20)
                Label.BackgroundTransparency = 1
                Label.Text = text
                Label.TextColor3 = Theme.Text
                Label.Font = Enum.Font.Gotham
                Label.TextSize = 14
                Label.TextXAlignment = Enum.TextXAlignment.Left
                Label.LayoutOrder = #SectionContent:GetChildren()
                Label.Parent = SectionContent
                
                local LabelObject = {}
                
                function LabelObject:Set(newText)
                    Label.Text = newText
                end
                
                return LabelObject
            end
            
            function Section:CreateKeybind(name, default, callback)
                local Keybind = Instance.new("Frame")
                Keybind.Name = name .. "Keybind"
                Keybind.Size = UDim2.new(1, 0, 0, 30)
                Keybind.BackgroundTransparency = 1
                Keybind.LayoutOrder = #SectionContent:GetChildren()
                Keybind.Parent = SectionContent
                
                local KeybindLabel = Instance.new("TextLabel")
                KeybindLabel.Name = "KeybindLabel"
                KeybindLabel.Size = UDim2.new(0.7, 0, 1, 0)
                KeybindLabel.BackgroundTransparency = 1
                KeybindLabel.Text = name
                KeybindLabel.TextColor3 = Theme.Text
                KeybindLabel.Font = Enum.Font.Gotham
                KeybindLabel.TextSize = 14
                KeybindLabel.TextXAlignment = Enum.TextXAlignment.Left
                KeybindLabel.Parent = Keybind
                
                local KeybindButton = Instance.new("TextButton")
                KeybindButton.Name = "KeybindButton"
                KeybindButton.Size = UDim2.new(0.25, 0, 0, 25)
                KeybindButton.Position = UDim2.new(0.75, 0, 0.5, -12.5)
                KeybindButton.BackgroundColor3 = Theme.Button
                KeybindButton.BorderSizePixel = 0
                KeybindButton.Text = default and default.Name or "None"
                KeybindButton.TextColor3 = Theme.Text
                KeybindButton.Font = Enum.Font.Gotham
                KeybindButton.TextSize = 14
                KeybindButton.AutoButtonColor = false
                KeybindButton.Parent = Keybind
                
                local Listening = false
                local SelectedKey = default
                
                KeybindButton.MouseButton1Click:Connect(function()
                    Listening = true
                    KeybindButton.Text = "..."
                end)
                
                UserInputService.InputBegan:Connect(function(input, gameProcessed)
                    if not gameProcessed and Listening then
                        if input.UserInputType == Enum.UserInputType.Keyboard then
                            SelectedKey = input.KeyCode
                            KeybindButton.Text = input.KeyCode.Name
                            Listening = false
                        elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
                            SelectedKey = Enum.UserInputType.MouseButton1
                            KeybindButton.Text = "MouseButton1"
                            Listening = false
                        end
                    elseif not Listening and SelectedKey and input.KeyCode == SelectedKey then
                        if callback then
                            callback()
                        end
                    end
                end)
                
                local KeybindObject = {}
                KeybindObject.Value = SelectedKey
                
                function KeybindObject:Set(key)
                    if typeof(key) == "EnumItem" and (key.EnumType == Enum.KeyCode or key.EnumType == Enum.UserInputType) then
                        SelectedKey = key
                        KeybindButton.Text = key.Name
                    end
                end
                
                return KeybindObject
            end
            
            table.insert(Tab.Sections, Section)
            return Section
        end
        
        table.insert(Window.Tabs, Tab)
        return Tab
    end
    
    function Window:SetTheme(newTheme)
        for k, v in pairs(newTheme) do
            if Theme[k] then
                Theme[k] = v
            end
        end
        -- TODO: Update all elements with new theme
    end
    
    return Window
end

return XENO_HUB
